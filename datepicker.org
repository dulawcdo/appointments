#+STARTUP: indent
#+TITLE: Datepicker Planning

The purpose of this file is to think through the logical steps necessary to automate the date and time selection for a Zoom appointment.

* Steps




* Python Test

#+BEGIN_SRC python

from selenium import webdriver

from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.keys import Keys
import time
import subprocess

driver = webdriver.Firefox()
driver.get("https://udenver.zoom.us/meeting/schedule")

time.sleep(5)

driver.find_element_by_id("username").send_keys("zeeshan.reshamwala@du.edu")
driver.find_element_by_id("password").send_keys("Zmn76642Denver")
driver.find_element_by_css_selector("button.form-element").click()

# Now enter a date

# driver.execute_script("some javascript code here");

time.sleep(30)

driver.execute_script("document.getElementById('start_date').removeAttribute('readonly',0);")

print('Enter date')
date = raw_input().strip()
formatdate = subprocess.call('date '+'-I '+'-d '+date)

startdate = driver.find_element_by_id('start_date')
startdate.click()
startdate.clear()
startdate.send_keys(formatdate)




#driver.execute_script("document.getElementById('start_date').setAttribute('value','10/10/2020')")


#+END_SRC

#+RESULTS:

* Piping bash to python

#+BEGIN_SRC python :results output


# print('Enter date')
# date = raw_input().strip()
#formatdate = subprocess.call(['/bin/bash/ '+'date '+'-I '+'-d '+date])
import subprocess

date = 'oct 10'

def bash_command(cmd):
    subprocess.Popen(cmd, shell=True, executable='/bin/bash', stdout=PIPE)

formatdate = bash_command('date -I -d '+'"'+date+'"')

print(formatdate)


#+END_SRC

#+RESULTS:


* Converting hours to minutes


#+BEGIN_SRC python :results output

from datetime import datetime

now = datetime.now()
seconds_since_midnight = (now - now.replace(hour=0, minute=0, second=0, microsecond=0)).total_seconds()
minutes = seconds_since_midnight/(60*30)
print(round(minutes))

#+END_SRC

#+RESULTS:
: 9.0

Also, you can calculate minutes since midnight in bash:

#+BEGIN_SRC bash :results output

# date "+(%H*60+%M)*60+%S"
read durin

echo $(($(date -d ${durin} +(%I*60+%M)/30)))


#+END_SRC

#+RESULTS:
: 9

* Notes
** bash can convert human dates into computer dates, and Iso dates
- =-d= flag helps convert the date
- =-I= flag makes ISO format

#+BEGIN_SRC bash :results output
date -I -d "oct 1"
#+END_SRC

#+RESULTS:
: 2020-10-01
** Resources on Datepicker
- https://stackoverflow.com/questions/21422548/how-to-select-the-date-picker-in-selenium-webdriver
- https://thetesterscorner.com/select-date-from-calendar-in-selenium/
- https://stackoverflow.com/questions/49747034/select-from-a-datepicker-in-python
** remove read-only attribute in console (can I execute this via python)
#+BEGIN_SRC javascript

document.getElementById('start_date').removeAttribute('readonly',0);


#+END_SRC
